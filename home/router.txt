== Перепрошиваем ==
Следуем инструкции "на сайте DD-WRT":http://www.dd-wrt.com/wiki/index.php/Asus_RT-N16
# Качаем начальную прошивку: ftp://dd-wrt.com/others/eko/BrainSlayer-V24-preSP2/2010/08-12-10-r14929/broadcom_K26/dd-wrt.v24-14929_NEWD-2_K2.6_mini_RT-N16.trx
# Качаем расширенную прошивку: http://www.dd-wrt.com/dd-wrtv2/downloads/others/eko/BrainSlayer-V24-preSP2/2011/05-08-11-r16994/broadcom_K26/dd-wrt.v24-16994_NEWD-2_K2.6_mega.bin
# Используя ''Internet Explorer'' заливаем начальную прошивку
# Выполняем Factory Reset (через веб-морду)
# Заливаем расширенную прошивку
# Выполняем перезагрузку 30-30-30 удерживая ''красную кнопку'' (30 включено, 30 выключено, 30 включено)


== OptWare ==

=== Первоначальная настройка ===
Следуем инструкции "на сайте DD-WRT":http://www.dd-wrt.com/wiki/index.php/Optware%2C_the_Right_Way
# Форматим флешку на (ext3:"Optware", swap:"Swap", ext3:"Data") "Инструкция":http://www.dd-wrt.com/wiki/index.php/How_to_-_Format_and_Partition_External_Storage_Device
# Включаем поддержку в веб-морде Core USB Support, USB Storage Support, Automatic Drive Mount to /opt
# Подключаем флешку к роутеру и перезагружаемся
# Выполняем инициализацию optware (команды выполняются на роутере через telnet/ssh):
#* wget -O /tmp/prep_optware http://wd.mirmana.com/prep_optware
#* sh /tmp/prep_optware

==== Ставим дополнительно ===
#* ipkg-opt install nano

==== Останавливаем не нужное ====
#* service twonky stop
#* service twonky off

==== Запускаем нужное ====
#необходимо для работы Network Printing, SWAT (web admin/config for samba) and OpenVPN)
#* service xinetd on
#* service xinetd start
# Информация по пакетам: http://www.nslu2-linux.org/wiki/Optware/Packages?from=Unslung.Packages

=== Обновляем ===
ipkg-opt update
ipkg-opt upgrade -test
ipkg-opt upgrade
cd /opt/home && ipkg-opt upgrade | tee -a `date --rfc-3339=date`_upgrade.log

=== Полезное ===
# Список установленного
ipkg-opt list_installed
# поиск
ipkg-opt search regexp

== OpenDNS + No-IP ==
Так как роутер может обновлять ip только на одном сервисе DDNS, а нам нужно новый IP отдавать и на NO-IP.com и на OpenDNS, то делаем так:

Подробности по пакету ddclient: http://www.nslu2-linux.org/wiki/Optware/Ddclient
# Заходим на www.dnsomatic.com с логин-паролем от OpenDNS
# Привязываем к аккаунту NO-IP и OpenDNS
# Заходим на роутер (telnet/ssh)
# Устанавливаем ddclient (не смотря на инфу что встренный тоже сможет работать - у меня этого не произошло)
#* ipkg-opt install ddclient libio-socket-ssl-perl
# Копируем конфигфайл
#* cp /opt/etc/ddclient.conf-dist /opt/etc/ddclient.conf
# Добавляем в конце
<pre>
##
## DNS-O-Matic account-configuration
##
use=web
web=myip.dnsomatic.com
server=updates.dnsomatic.com
protocol=dyndns2
login=dnsomatic_username
password=dnsomatic_password
all.dnsomatic.com
</pre>
# Создаем скрипт сервиса (/opt/etc/init.d/S99ddclient)
<pre>
#!/bin/sh
NAME=${0##*/}
killall -q ddclient
/opt/sbin/ddclient &
</pre>
# Включаем и запускаем сервис
#* service ddclient on
#* service ddclient start
# Теперь ddclient будет запускаться при старте роутера и каждые 300 секунд (=5 минут) обновлять данные на DNS-O-Matic, а он эти обновления будет сливать сразу и на OpenDNS и на NO-IP.

== Мегалайн&Google+ ==
# Клонируем проект с правильными IP-шниками на флешку:
#* cd /opt/home
#* git clone git://github.com/valery1707/docs-linux.git
# Создаем ссылку на нужный нам файл в home:
#* ln docs-linux/home/MegalineHosts/MegalineHosts.out
# Создаем скрипт для обновления:
#* nano /opt/home/megaline-update
<pre>
#!/bin/sh
# Pull new file
cd /opt/home/docs-linux
/opt/bin/git pull
# Tell DNSMasq to reread configuration
/opt/bin/killall -HUP dnsmasq
</pre>

== Cron ==
# http://www.dd-wrt.com/wiki/index.php/CRON
# Список задач прописывается в веб интерфейсе в Administration->Management
# Формат: %minute (0-59)% %hour (0-23)% %day of the month (1-31)% %month of the year (1-12)% %day of the week (0-6 with 0=Sunday)% root %commands%
# Поле "root" указывает под каким пользователем выполнять команды
# Пути до команд нужно указывать полные, так как при запуске через cron $PATH может не содержать всех путей


== Настройка Lan ==
# Увел всю сеть на 10.17.6.*
# Сам роутер будет теперь 10.17.6.1


== Настройка WiFi ==
# Так как у меня есть устройство стандарта 802.11b, то и роутер будет работать в смешанном режиме BGN, и полной производительности N я не получу
# Из-за того же ПринтСервера приходиться держать защиту на уровне WEP
